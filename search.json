[{"path":"https://cidree.github.io/OTBsegm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Adrián Cidre González Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cidree.github.io/OTBsegm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrián Cidre González. Author, maintainer.","code":""},{"path":"https://cidree.github.io/OTBsegm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cidre González (2025). OTBsegm: Apply Unsupervised Segmentation Algorithms 'OTB'. R package version 0.1.0, https://cidree.github.io/OTBsegm/.","code":"@Manual{,   title = {OTBsegm: Apply Unsupervised Segmentation Algorithms from 'OTB'},   author = {Adrián {Cidre González}},   year = {2025},   note = {R package version 0.1.0},   url = {https://cidree.github.io/OTBsegm/}, }"},{"path":"https://cidree.github.io/OTBsegm/index.html","id":"otbsegm-","dir":"","previous_headings":"","what":"Apply Unsupervised Segmentation Algorithms from OTB","title":"Apply Unsupervised Segmentation Algorithms from OTB","text":"OTBsegm R package provides user-friendly interface unsupervised image segmentation algorithms available Orfeo ToolBox (OTB), powerful open-source library remote sensing image processing. OTBsegm built top link2GI R package, providing easy access image segmentation algorithms. use {OTBsegm}, must first install OTB machine. OTB installed properly linked {link2GI} (see examples), package allows easily integrate OTB’s segmentation algorithms workflows.","code":""},{"path":"https://cidree.github.io/OTBsegm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Apply Unsupervised Segmentation Algorithms from OTB","text":"can install development version OTBsegm GitHub :","code":"# install.packages(\"pak\") pak::pak(\"Cidree/OTBsegm\")"},{"path":"https://cidree.github.io/OTBsegm/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Apply Unsupervised Segmentation Algorithms from OTB","text":"see segment image included package:  image 500x500 meters RGB tile, spatial resolution 15 cm Galicia, Spain. meanshift algorithm next important arguments: spatialr: spatial radius neighborhood ranger: range radius defining radius (expressed radiometry unit) multispectral space minsize: minimum size region (pixel unit) segmentation. Smaller clusters merged neighboring cluster closest radiometry. set 0 pruning done. image’s resolution 1.2 m, therefore, value minsize = 10 means smallest segment 10*1.22=14.4m210 * 1.2^2 = 14.4 m^2. order use algorithms, need link OTB installation using {link2GI}: connected, can apply segmentation algorithm visualize results:","code":"## load packages library(link2GI) library(OTBsegm) library(terra) #> Warning: package 'terra' was built under R version 4.4.3 #> terra 1.8.29  ## load image image_sr <- rast(system.file(\"raster/pnoa.tiff\", package = \"OTBsegm\"))  ## visualize plotRGB(image_sr) otblink <- link2GI::linkOTB(searchLocation = \"C:/OTB/\") results_ms_sf <- segm_meanshift(     image    = image_sr,     otb      = otblink,     spatialr = 5,     ranger   = 25,     maxiter  = 10,     minsize  = 10 ) #> Reading layer `filecfc6b37181f' from data source  #>   `C:\\Users\\User\\AppData\\Local\\Temp\\RtmpAjZLFx\\filecfc6b37181f.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 811 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 621000 ymin: 4708385 xmax: 621300 ymax: 4708685 #> Projected CRS: ETRS89 / UTM zone 29N plotRGB(image_sr) plot(sf::st_geometry(results_ms_sf), add = TRUE)"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_lsms.html","id":null,"dir":"Reference","previous_headings":"","what":"Large-scale segmentation using Mean-Shift — segm_lsms","title":"Large-scale segmentation using Mean-Shift — segm_lsms","text":"Applies Mean-Shift segmentation algorithm image file SpatRaster. Suitable large images","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_lsms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Large-scale segmentation using Mean-Shift — segm_lsms","text":"","code":"segm_lsms(   image,   otb,   spatialr = 5L,   ranger = 15,   minsize = 100L,   tilesize = 500L,   mode = \"vector\",   ram = 256L )"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_lsms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Large-scale segmentation using Mean-Shift — segm_lsms","text":"image path raster, SpatRaster otb output link2GI::linkOTB() spatialr integer. Spatial radius neighborhood ranger range radius defining radius (expressed radiometry unit) multispectral space minsize integer. Minimum size region (pixel unit) segmentation. Smaller clusters merged neighboring cluster closest radiometry. set 0 pruning done tilesize integer. Size tiles tile-wise processing mode processing mode, either 'vector' 'raster'. See details ram integer. Available memory processing (MB)","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_lsms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Large-scale segmentation using Mean-Shift — segm_lsms","text":"sf SpatRaster","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_lsms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Large-scale segmentation using Mean-Shift — segm_lsms","text":"Mean-Shift region-based segmentation algorithm groups pixels similar characteristics. non-parametric clustering technique groups pixels based spatial proximity feature similarity (color, intensity). method particularly effective preserving edges defailt simplifying textures high-resolution images. Steps: Initialization: pixel treated point multi-dimensional space (combining spatial color features). Mean Shift Iterations: pixel, search window moves toward region highest data density (local maxima) calculating mean neighboring pixels within window. Convergence: process repeats movement window becomes negligible, indicating convergence. Label Assignment: Pixels converge mode (local maxima) grouped region. important parameters : spatialr: defines size neighborhood ranger: determines similarity feature space maxiter: limits number iterations convergence thresh: defines convergence criterion based pixel movement processing mode 'vector' output vector file, process input image piecewise. allows performing segmentation large images. contrast, 'raster' mode output labeled raster, handle large data. mode 'raster', 'vector_*' arguments ignored.","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_lsms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Large-scale segmentation using Mean-Shift — segm_lsms","text":"","code":"if (FALSE) { # \\dontrun{ ## load packages library(link2GI) library(OTBsegm) library(terra)  ## load sample image image_sr <- rast(system.file(\"raster/pnoa.tiff\", package = \"OTBsegm\"))  ## connect to OTB (change to your directory) otblink <- link2GI::linkOTB(searchLocation = \"C:/OTB/\")  ## apply segmentation results_ms_sf <- segm_lsms(     image = image_sr,     otb   = otblink,     spatialr = 5,     ranger   = 25,     minsize  = 10 )  plotRGB(image_sr) plot(st_geometry(results_ms_sf), add = TRUE) } # }"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_meanshift.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean-Shift Segmentation — segm_meanshift","title":"Mean-Shift Segmentation — segm_meanshift","text":"Applies mean-shift segmentation algorithm image file SpatRaster","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_meanshift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean-Shift Segmentation — segm_meanshift","text":"","code":"segm_meanshift(   image,   otb,   spatialr = 5L,   ranger = 15,   thresh = 0.1,   maxiter = 100L,   minsize = 100L,   mode = \"vector\",   vector_neighbor = FALSE,   vector_stitch = TRUE,   vector_minsize = 1L,   vector_simplify = 0.1,   vector_tilesize = 1024L,   mask = NULL )"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_meanshift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean-Shift Segmentation — segm_meanshift","text":"image path SpatRaster otb output link2GI::linkOTB() spatialr integer. Spatial radius neighborhood ranger range radius defining radius (expressed radiometry unit) multispectral space thresh algorithm iterative scheme stop mean-shift vector threshold iteration number reached maximum number iterations maxiter integer. Algorithm iterative scheme stop convergence hasn’t reached maximum number iterations minsize integer. Minimum size region (pixel unit) segmentation. Smaller clusters merged neighboring cluster closest radiometry. set 0 pruning done mode processing mode, either 'vector' 'raster'. See details vector_neighbor logical. FALSE (default) 4-neighborhood connectivity activated. TRUE, 8-neighborhood connectivity used vector_stitch logical. TRUE (default), scans polygons side tiles stitch polygons connect one pixel vector_minsize integer. Objects whose size pixels minimum object size ignored vectorization vector_simplify simplify polygons according given tolerance (pixel). option allows reducing size output file database. vector_tilesize integer. User defined tiles size tile-based segmentation. Optimal tile size selected according available RAM NULL mask optional raster used masking segmentation. pixels whose mask strictly positive segmented","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_meanshift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean-Shift Segmentation — segm_meanshift","text":"sf SpatRaster","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_meanshift.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean-Shift Segmentation — segm_meanshift","text":"Mean-Shift region-based segmentation algorithm groups pixels similar characteristics. non-parametric clustering technique groups pixels based spatial proximity feature similarity (color, intensity). method particularly effective preserving edges defailt simplifying textures high-resolution images. Steps: Initialization: pixel treated point multi-dimensional space (combining spatial color features). Mean Shift Iterations: pixel, search window moves toward region highest data density (local maxima) calculating mean neighboring pixels within window. Convergence: process repeats movement window becomes negligible, indicating convergence. Label Assignment: Pixels converge mode (local maxima) grouped region. important parameters : spatialr: defines size neighborhood ranger: determines similarity feature space maxiter: limits number iterations convergence thresh: defines convergence criterion based pixel movement processing mode 'vector' output vector file, process input image piecewise. allows performing segmentation large images. contrast, 'raster' mode output labeled raster, handle large data. mode 'raster', 'vector_*' arguments ignored.","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_meanshift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean-Shift Segmentation — segm_meanshift","text":"","code":"if (FALSE) { # \\dontrun{ ## load packages library(link2GI) library(OTBsegm) library(terra)  ## load sample image image_sr <- rast(system.file(\"raster/pnoa.tiff\", package = \"OTBsegm\"))  ## connect to OTB (change to your directory) otblink <- link2GI::linkOTB(searchLocation = \"C:/OTB/\")  ## apply segmentation results_ms_sf <- segm_meanshift(     image    = image_sr,     otb      = otblink,     spatialr = 5,     ranger   = 25,     maxiter  = 10,     minsize  = 10 ) } # }"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_mprofiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Morphological profiles segmentation — segm_mprofiles","title":"Morphological profiles segmentation — segm_mprofiles","text":"Applies morphological profiles segmentation algorithm image file SpatRaster","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_mprofiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Morphological profiles segmentation — segm_mprofiles","text":"","code":"segm_mprofiles(   image,   otb,   size = 5L,   start = 1L,   step = 1L,   sigma = 1,   mode = \"vector\",   vector_neighbor = FALSE,   vector_stitch = TRUE,   vector_minsize = 1L,   vector_simplify = 0.1,   vector_tilesize = 1024L,   mask = NULL )"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_mprofiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Morphological profiles segmentation — segm_mprofiles","text":"image path SpatRaster otb output link2GI::linkOTB() size integer. Size profiles start integer. Initial radius structuring element pixels step integer. Radius step pixels along profile sigma profiles values threshold ignored mode processing mode, either 'vector' 'raster'. See details vector_neighbor logical. FALSE (default) 4-neighborhood connectivity activated. TRUE, 8-neighborhood connectivity used vector_stitch logical. TRUE (default), scans polygons side tiles stitch polygons connect one pixel vector_minsize integer. Objects whose size pixels minimum object size ignored vectorization vector_simplify simplify polygons according given tolerance (pixel). option allows reducing size output file database. vector_tilesize integer. User defined tiles size tile-based segmentation. Optimal tile size selected according available RAM NULL mask optional raster used masking segmentation. pixels whose mask strictly positive segmented","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_mprofiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Morphological profiles segmentation — segm_mprofiles","text":"sf SpatRaster","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_mprofiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Morphological profiles segmentation — segm_mprofiles","text":"morphological profiles segmentation algorithm region-based image segmentation technique applies series morphological operations using structuring elements increasing size capture spatial patterns textures within image. Steps: Morphological Filtering: algorithm applies sequence openings (removing small bright structures) closings (removing small dark structures) input image using structuring elements (e.g., disks, rectangles). Profile Generation: generates profile pixel recording response morphological operations different scales. Feature Extraction: profiles help capture fine coarse structures within image, creating set features can used classification segmentation. Segmentation (Optional): extracted profiles can input classifier segmentation algorithm differentiate regions distinct spatial characteristics. processing mode 'vector' output vector file, process input image piecewise. allows performing segmentation large images. contrast, 'raster' mode output labeled raster, handle large data. mode 'raster', 'vector_*' arguments ignored.","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_mprofiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Morphological profiles segmentation — segm_mprofiles","text":"","code":"if (FALSE) { # \\dontrun{ ## load packages library(link2GI) library(OTBsegm) library(terra)  ## load sample image image_sr <- rast(system.file(\"raster/pnoa.tiff\", package = \"OTBsegm\"))  ## connect to OTB (change to your directory) otblink <- link2GI::linkOTB(searchLocation = \"C:/OTB/\")  ## apply segmentation results_ms_sf <- segm_mprofiles(     image = image_sr,     otb   = otblink,     size  = 5,     start = 3,     step  = 20,     sigma = 1 ) } # }"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_watershed.html","id":null,"dir":"Reference","previous_headings":"","what":"Watershed segmentation — segm_watershed","title":"Watershed segmentation — segm_watershed","text":"Applies watershed segmentation algorithm image file SpatRaster","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_watershed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Watershed segmentation — segm_watershed","text":"","code":"segm_watershed(   image,   otb,   thresh = 0.01,   level = 0.1,   mode = \"vector\",   vector_neighbor = FALSE,   vector_stitch = TRUE,   vector_minsize = 1L,   vector_simplify = 0.1,   vector_tilesize = 1024L,   mask = NULL )"},{"path":"https://cidree.github.io/OTBsegm/reference/segm_watershed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Watershed segmentation — segm_watershed","text":"image path SpatRaster otb output link2GI::linkOTB() thresh depth threshold units percentage maximum depth image level flood level generating merge tree initial segmentation (0 1) mode processing mode, either 'vector' 'raster'. See details vector_neighbor logical. FALSE (default) 4-neighborhood connectivity activated. TRUE, 8-neighborhood connectivity used vector_stitch logical. TRUE (default), scans polygons side tiles stitch polygons connect one pixel vector_minsize integer. Objects whose size pixels minimum object size ignored vectorization vector_simplify simplify polygons according given tolerance (pixel). option allows reducing size output file database. vector_tilesize integer. User defined tiles size tile-based segmentation. Optimal tile size selected according available RAM NULL mask optional raster used masking segmentation. pixels whose mask strictly positive segmented","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_watershed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Watershed segmentation — segm_watershed","text":"sf SpatRaster","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_watershed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Watershed segmentation — segm_watershed","text":"watershed segmentation algorithm region-based image segmentation technique inspired topography. treats grayscale intensity image topographic surface, brighter pixels represent peaks darker pixels represent valleys. algorithm simulates flooding surface separate distinct regions. Steps: Topographic Interpretation: input image treated 3D landscape, pixel intensity corresponds elevation. Flooding Process: Starting local minima, algorithm simulates water flooding surface. water rises, distinct regions (basins) formed. Watershed Lines: two basins meet, boundary (watershed line) formed prevent merging. Region Labeling: basin assigned unique label, producing segmented image boundaries clearly defined. processing mode 'vector' output vector file, process input image piecewise. allows performing segmentation large images. contrast, 'raster' mode output labeled raster, handle large data. mode 'raster', 'vector_*' arguments ignored.","code":""},{"path":"https://cidree.github.io/OTBsegm/reference/segm_watershed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Watershed segmentation — segm_watershed","text":"","code":"if (FALSE) { # \\dontrun{ ## load packages library(link2GI) library(OTBsegm) library(terra)  ## load sample image image_sr <- rast(system.file(\"raster/pnoa.tiff\", package = \"OTBsegm\"))  ## connect to OTB (change to your directory) otblink <- link2GI::linkOTB(searchLocation = \"C:/OTB/\")  ## apply segmentation results_ms_sf <- segm_watershed(     image  = image_sr,     otb    = otblink,     thresh = .1,     level  = .2 ) } # }"},{"path":[]},{"path":"https://cidree.github.io/OTBsegm/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"OTBsegm 0.1.1","text":"Mask wasn’t properly used segm_meanshift(), segm_watershed(), segm_mprofiles() Removed mask argument segm_lsms() since function doesn’t support ","code":""},{"path":"https://cidree.github.io/OTBsegm/news/index.html","id":"otbsegm-010","dir":"Changelog","previous_headings":"","what":"OTBsegm 0.1.0","title":"OTBsegm 0.1.0","text":"CRAN release: 2025-05-06 Initial CRAN submission.","code":""}]
